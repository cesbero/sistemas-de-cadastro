

SELECT * FROM SYNCHRO.FIS_DETALHE_REC_ICMS_ST_X

select * from table(USRASSISTENTEFISCAL.FN_EXCEDENTE_ENT('535',TO_DATE('2016/11/25','YYYY/MM/DD'),'R00001099414'))        

select * from table(USRASSISTENTEFISCAL.FN_EXCEDENTE_ENT_CD(TO_DATE('2016/01/29','YYYY/MM/DD'),'R00000264268'))


-- GERAR O RELATÓRIO
SELECT   
   DISTINCT    
   REC_ID, 
   DET_ID, 
   FAZ_PARTE_PEDIDO, PERIODO, MOV, FILIAL, DOF_NUMERO, DOF_IMPORT_NUMERO, DT_FATO_GERADOR_IMPOSTO, CFOP_CODIGO, TIPO_CFOP, DENTRO_ESTADO,
   ENT_SAI_UNI_CODIGO, MERC_CODIGO, DESCRICAO, NUM_ITEM, EMBALAGEM, VL_CONTABIL, QUANTIDADE, VOLUME,    
   SALDO,   
   VL_UNIT, ALIQ_ST_ENTRADA, VL_BASE_ST_ORIGINAL, 
   VL_BASE_ST_UNIT, VL_BASE_ST, VL_CREDITO, VL_BC_ST_UNIT_MEDIO, VL_BASE_ACUMULADA, QTD_ACUMULADA, STATUS
FROM
(   
SELECT 
   ID, REC_ID, 
   
   CASE WHEN DET_ID IS NULL THEN -1 ELSE DET_ID END DET_ID, 
     
   FAZ_PARTE_PEDIDO, PERIODO, MOV, FILIAL, DOF_NUMERO, DOF_IMPORT_NUMERO, DT_FATO_GERADOR_IMPOSTO, CFOP_CODIGO, TIPO_CFOP, DENTRO_ESTADO,
   ENT_SAI_UNI_CODIGO, MERC_CODIGO, DESCRICAO, NUM_ITEM, EMBALAGEM, VL_CONTABIL, QUANTIDADE, VOLUME, 
  
   CASE WHEN MOV = 'S' THEN NULL ELSE SALDO END SALDO,

    VL_UNIT, ALIQ_ST_ENTRADA, VL_BASE_ST_ORIGINAL, 
   VL_BASE_ST_UNIT, VL_BASE_ST, VL_CREDITO, VL_BC_ST_UNIT_MEDIO, VL_BASE_ACUMULADA, QTD_ACUMULADA, STATUS
FROM USRASSISTENTEFISCAL.FIS_DETALHE_REC_EXCEDENTE_MG
ORDER BY ID
)
ORDER BY REC_ID, DET_ID;

select * from USRASSISTENTEFISCAL.EXCEDENTE_MG_ENTRADA_DET where dof_import_numero = '0036140112'

select * from USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT order by det_id
       
   
-- GERAR O RELATÓRIO
SELECT  
    DISTINCT
     TO_CHAR(A.DT_INICIO,'MM/YYYY') PERIODO,
     A.ESTOQUE_INICIAL,
     A.ESTOQUE_FINAL,
     M.REC_ID, M.DET_ID,
     M.faz_parte_pedido,
    -- S.DT_REGISTRO,
    -- M.DT_REGISTRO,
     'SAÍDA' as saida,
      S.FILIAL FILIAL_S, S.DATA, S.DOF_NUMERO, S.DOF_IMPORT_NUMERO, S.MERC_CODIGO, S.DESCRICAO, S.NUM_ITEM,S.STC_CODIGO STC_S, S.CFOP_CODIGO CFOP_S, S.QTD, S.VL_UNITARIO, M.SALDO_SAIDA, S.VOLUME, S.VL_CONTABIL, S.VL_BASE_ST_UNIT AS VL_BC_ST_UNIT_MEDIO_S, S.VL_BASE_ST_VENDA, S.VL_DIF_BASE_ST,S.ALIQ_STF_ENTRADA, S.VL_CREDITO_ST, S.STATUS,
     'LOJA' ENTRADA,  
      M.ID_COUNT ID_REF_ENTRADA,
      E.ID,E.FILIAL,E.DOF_NUMERO NUMERO, E.DOF_IMPORT_NUMERO DOC_NUM,E.IDF_NUM,E.DT_FATO_GERADOR_IMPOSTO, E.DH_EMISSAO, E.CFOP_CODIGO, E.OPERACAO,e.stc_codigo, E.ENTSAI_UNI_CODIGO UNIDADE, E.EMBALAGEM, E.QUANTIDADE, E.VOLUME, M.ESTOQUE, E.ALIQ_STF, 
      
      (
        SELECT 
           A.ESTOQUE
        FROM USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT A
        WHERE 
             A.MERC_CODIGO = M.MERC_CODIGO
             AND A.ID_ENTRADA  = M.ID_ENTRADA
             AND (A.REC_ID, A.DET_ID) = (SELECT MAX(REC_ID), MAX(DET_ID) FROM USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT B
                                         WHERE 
                                               B.REC_ID < M.REC_ID
                                               AND B.MERC_CODIGO = A.MERC_CODIGO
                                               AND B.ID_ENTRADA = A.ID_ENTRADA
                                        )   
       )SALDO_E_ANT,
      (SELECT BASE_ST_ACUMULADA FROM (SELECT S.BASE_ST_ACUMULADA FROM USRASSISTENTEFISCAL.Excedente_MG_MERC S WHERE S.FILIAL = A.FILIAL AND S.MERC_CODIGO = A.MERC_CODIGO AND S.DT_INICIO   < A.DT_INICIO ORDER BY S.DT_INICIO DESC ) WHERE ROWNUM < 2) VL_BASE_ACUMULADA_ANT,
      (SELECT VOLUME_ACUMULADO FROM (SELECT S.VOLUME_ACUMULADO FROM USRASSISTENTEFISCAL.Excedente_MG_MERC S WHERE S.FILIAL = A.FILIAL AND S.MERC_CODIGO = A.MERC_CODIGO AND S.DT_INICIO   < A.DT_INICIO ORDER BY S.DT_INICIO DESC ) WHERE ROWNUM < 2) QTD_ACUMULADA_ANT,
      
      
      M.VL_BASE_ST_ACUMULADA, M.QTD_ACUMULADA,
      
      M.VL_BC_ST_UNIT, M.VL_BC_ST_UNIT_MEDIO VL_BC_ST_UNIT_MEDIO_E,--M.VL_BC_ST_UNIT_CD
      e.vl_base_st, e.vl_st, 
      --e.vl_bc_st_unit,
      --M.VL_BC_ST
      --M.VL_BASE_ACUMULADA_CD,M.QTD_ACUMULADA_CD
      'CD' ENTRADA,
      C.ID,C.FILIAL,C.DOF_NUMERO NUMERO, C.DOF_IMPORT_NUMERO DOC_NUM,C.DT_FATO_GERADOR_IMPOSTO, C.DH_EMISSAO, C.CFOP_CODIGO, C.OPERACAO,C.stc_codigo, C.ALIQ_STF, C.ENTSAI_UNI_CODIGO UNIDADE, C.EMBALAGEM, C.QUANTIDADE, C.VOLUME,
      M.ESTOQUE_CD,
      C.vl_base_st, c.vl_st,C.VL_BC_ST_UNIT        
FROM USRASSISTENTEFISCAL.Excedente_MG_MERC A
INNER JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_SAIDA_DET S ON A.REC_ID = S.REC_ID
LEFT JOIN USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT   M ON A.REC_ID = M.REC_ID AND S.DET_ID = M.DET_ID AND M.FILIAL = '535'
LEFT JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_ENTRADA_DET E ON M.ID_ENTRADA = E.ID AND S.MERC_CODIGO = E.MERC_CODIGO
LEFT  JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_ENTRADA_DET C ON M.ID_CD_REF  = C.ID AND S.MERC_CODIGO = C.MERC_CODIGO
--where
     -- M.ID_ENTRADA = 80257
      --A.REC_ID = 61201
      --S.MERC_CODIGO = 'R00001099414'
      -- E.DOF_IMPORT_NUMERO = '0036701166'
       
order by M.REC_ID, M.DET_ID,M.ID_COUNT;


-- RELATORIO PRODUTOS	
 SELECT
	CASE WHEN SUBSTR(trim(A.MERC_CODIGO),1,1) = 'R' THEN TO_CHAR(SYNCHRO.ASSISTENTE_FISCAL.is_number(replace(A.MERC_CODIGO,'R','0')))  ELSE A.MERC_CODIGO END COD_PRODUTO,
	--NFE.NBM_CODIGO CODIGO_NCM,
	S.DESCRICAO,
	B.UNI_CODIGO UNIDADE_VENDA,
	SUM(cast ( S.VOLUME    				AS NUMBER(15, 2)))     	AS QTD,     
	SUM(cast ( S.VL_DIF_BASE_ST    		AS NUMBER(15, 2)))     	AS VL_DIF_BASE_ST, 
	SUM(cast ( S.VL_DIF_BASE_ICMS    	AS NUMBER(15, 2)))     	AS VL_DIF_BASE_ICMS, 	
	SUM(cast ( S.VL_CREDITO_ST    		AS NUMBER(15, 2)))     	AS ST_RECUP,      
	SUM(cast ( S.VL_CREDITO_ICMS   		AS NUMBER(15, 2)))     	AS ICMS_RECUP     
FROM USRASSISTENTEFISCAL.Excedente_MG_MERC A
    INNER JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_SAIDA_DET S ON A.REC_ID = S.REC_ID
    INNER JOIN USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT M ON A.REC_ID = M.REC_ID AND S.DET_ID = M.DET_ID
	INNER JOIN USRASSISTENTEFISCAL.GBA_RECUP_ST_saida_EXCEDENTE B ON S.DOF_IMPORT_NUMERO = B.DOF_IMPORT_NUMERO AND S.MERC_CODIGO = B.MERC_CODIGO AND S.NUM_ITEM = B.NUM_ITEM
    INNER JOIN USRASSISTENTEFISCAL.TB_MERC_TIT_TES_excedente TX   ON (A.MERC_CODIGO = TX.PRODUTO AND A.DT_INICIO = TX.REC_DTA_INICIO AND A.FILIAL = TX.FILIAL)
    INNER JOIN SYNCHRO.TBFILIAL F                  ON A.FILIAL = F.FILIAL
	 WHERE  
		A.DT_INICIO 				= TO_DATE('2016/11/01','YYYY/MM/DD')   
		AND A.FILIAL 				= '535'
		AND M.FAZ_PARTE_PEDIDO		= 'S'
		--AND A.ESTOQUE_INICIAL		>= 0
		AND M.VL_BC_ST_UNIT_MEDIO	>= 0
		AND S.VL_CREDITO_ST			> 0
GROUP BY 
	CASE WHEN SUBSTR(trim(A.MERC_CODIGO),1,1) = 'R' THEN TO_CHAR(SYNCHRO.ASSISTENTE_FISCAL.is_number(replace(A.MERC_CODIGO,'R','0')))  ELSE A.MERC_CODIGO END,
	S.DESCRICAO,
	B.UNI_CODIGO;
	
-- Relatorio saidas
SELECT 
	A.DT_INICIO REC_DTA_INICIO,
	F.EST_CODIGO,
	S.DOF_NUMERO NOTA,
	S.DATA DT_FATO_GERADOR_IMPOSTO, 
	S.CFOP_CODIGO CFL_ID,
	CASE WHEN SUBSTR(trim(A.MERC_CODIGO),1,1) = 'R' THEN TO_CHAR(SYNCHRO.ASSISTENTE_FISCAL.is_number(replace(A.MERC_CODIGO,'R','0')))  ELSE A.MERC_CODIGO END COD_PRODUTO,
	S.DESCRICAO,
	cast ( S.VOLUME           		AS NUMBER(15, 2))       AS QTD,
	cast ( S.VL_DIF_BASE_ST       	AS NUMBER(15, 2))       AS VL_DIF_BASE_ST, 
	cast ( S.VL_DIF_BASE_ICMS     	AS NUMBER(15, 2))       AS VL_DIF_BASE_ICMS,  
	cast ( S.VL_CREDITO_ST        	AS NUMBER(15, 2))       AS ST_RECUP,      
	cast ( S.VL_CREDITO_ICMS      	AS NUMBER(15, 2))       AS ICMS_RECUP     
FROM USRASSISTENTEFISCAL.Excedente_MG_MERC A
INNER JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_SAIDA_DET S     	ON A.REC_ID = S.REC_ID
INNER JOIN USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT M     	ON A.REC_ID = M.REC_ID AND S.DET_ID = M.DET_ID
INNER JOIN USRASSISTENTEFISCAL.GBA_RECUP_ST_saida_EXCEDENTE B   ON S.DOF_IMPORT_NUMERO = B.DOF_IMPORT_NUMERO AND S.MERC_CODIGO = B.MERC_CODIGO AND S.NUM_ITEM = B.NUM_ITEM
INNER JOIN USRASSISTENTEFISCAL.TB_MERC_TIT_TES_excedente TX     ON (A.MERC_CODIGO = TX.PRODUTO AND A.DT_INICIO = TX.REC_DTA_INICIO AND A.FILIAL = TX.FILIAL)
INNER JOIN SYNCHRO.TBFILIAL F                           		ON A.FILIAL = F.FILIAL
WHERE 
	A.DT_INICIO         		= TO_DATE('2016/11/01','YYYY/MM/DD')   
	AND A.FILIAL        		= '535'
	AND M.FAZ_PARTE_PEDIDO    	= 'S'
	--AND A.ESTOQUE_INICIAL   >= 0
	AND M.VL_BC_ST_UNIT_MEDIO 	>= 0
	AND S.VL_CREDITO_ST     	> 0;
	
     


select * from USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT where merc_codigo = 'R00001099414' and rec_id = 61190
and id_entrada in(80207,80209)
order by det_id

--in(80207,80209,80212,80214,80213,80210)

select CASE WHEN  NVL(NEI.vl_base_stf,0) = 0 THEN NVL(NEI.vl_base_stf_fronteira,0) ELSE NVL(NEI.vl_base_stf,0) END AS vl_base_st,
       CASE WHEN  NVL(NEI.VL_STF,0) 	 = 0 THEN NVL(NEI.VL_STF_FRONTEIRA,0) ELSE NVL(NEI.VL_STF,0)           END AS VL_ST
FROM SYNCHRO.COR_DOF NFE
INNER JOIN SYNCHRO.COR_IDF NEI                          ON   NEI.DOF_ID   = NFE.ID
where nfe.dof_import_numero = '0036701166'
      and nei.merc_codigo = 'R00001099414'


-- Verificando se existe nota de entrada associada possui data maior que a nota de saída
select 
  DISTINCT A.REC_ID, A.DET_ID, S.DATA, B.DT_FATO_GERADOR_IMPOSTO, C.DT_FATO_GERADOR_IMPOSTO
from USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT A
INNER JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_SAIDA_DET S ON A.REC_ID = S.REC_ID AND A.DET_ID = S.DET_ID
INNER JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_ENTRADA_DET B ON A.ID_ENTRADA = B.ID 
LEFT  JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_ENTRADA_DET C ON A.ID_CD_REF  = C.ID 
WHERE 
     A.ID_ENTRADA IS NOT NULL
     AND (S.DATA < B.DT_FATO_GERADOR_IMPOSTO OR S.DATA < C.DT_FATO_GERADOR_IMPOSTO)

-- verificando se a mesma entrada foi associada a saída com Itens diferentes
SELECT ID_ENTRADA, COUNT(*)
FROM
(
SELECT DISTINCT M.ID_ENTRADA, S.MERC_CODIGO
FROM  USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT M
INNER JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_SAIDA_DET S on M.REC_ID = S.REC_ID AND M.DET_ID = S.DET_ID
INNER JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_ENTRADA_DET E ON M.ID_ENTRADA = E.ID
--WHERE S.data BETWEEN to_date('2016/11/01','yyyy/mm/dd') AND to_date('2016/11/30','yyyy/mm/dd')
)
GROUP BY ID_ENTRADA
HAVING COUNT(*) > 1
ORDER BY COUNT(*) DESC

-- E.FAZ_PARTE_PEDIDO N => NOTAS QUE VÃO FICAR DE FORA DO PEDIDO
SELECT E.REC_ID, E.DET_ID, COUNT(E.ID_ENTRADA) TOTAL
FROM USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT E
INNER JOIN
      (     
          SELECT 
              DISTINCT A.REC_ID, A.DET_ID
          FROM USRASSISTENTEFISCAL.EXCEDENTE_MG_SAIDA_DET A
          INNER JOIN 
          (
            SELECT 
                FILIAL, DATA, MERC_CODIGO, SUM(VL_CREDITO) TOTAL_CREDITO
            FROM USRASSISTENTEFISCAL.EXCEDENTE_MG_SAIDA_DET  
            GROUP BY 
                  FILIAL, DATA, MERC_CODIGO
            HAVING SUM(VL_CREDITO) < 0
          ) B ON A.FILIAL = B.FILIAL AND A.MERC_CODIGO = B.MERC_CODIGO AND A.DATA = B.DATA
     ) D ON E.REC_ID = D.REC_ID AND E.DET_ID = D.DET_ID
     WHERE E.FAZ_PARTE_PEDIDO = 'N'    
GROUP BY E.REC_ID, E.DET_ID
HAVING COUNT(*) > 1     
      
loja, data, mercadoria onde vl_credito > 0 

QUANDO A SAÍDA FOR ASSOCIADA A + DE UMA ENTRDA, CALCULAR COM BASE NA MENOR ALIQUOTA      

NO RELATÓRIO DE SAÍDAS É SÓ INFORMADO O VALOR DE ICMS


alterar o modelo de 01 para 55 para as chave não localizadas
     
SELECT * FROM USRASSISTENTEFISCAL.Excedente_MG_LOG
where rec_id = 110 and det_id = 601


-- CENÁRIO 1
   -- S.merc_codigo = 'R00001103816' AND S.DATA = TO_DATE('2016/11/30','YYYY/MM/DD')      
   -- A NOTA DE ENTRADA 0036835673 (DOF_IMPORT_NUMERO) NÃO FOI REFERENCIADA NO MÊS 11/2016 NO MATERIAL DE EXEMPLO
         
/*

              
select count(*) from USRASSISTENTEFISCAL.Excedente_MG_MERC

SELECT COUNT(*) FROM USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT

select count(*) from USRASSISTENTEFISCAL.GBA_MERC_Excedente_MG



select (2642 - 2047) from dual
-- REINICIAR TUDO
TRUNCATE TABLE USRASSISTENTEFISCAL.Excedente_MG_MERC; 
TRUNCATE TABLE USRASSISTENTEFISCAL.EXCEDENTE_MG_SAIDA_DET;
TRUNCATE TABLE USRASSISTENTEFISCAL.EXCEDENTE_MG_ENTRADA_DET;  
TRUNCATE TABLE USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT;
TRUNCATE TABLE USRASSISTENTEFISCAL.Excedente_MG_LOG;
TRUNCATE TABLE USRASSISTENTEFISCAL.FIS_DETALHE_REC_EXCEDENTE_MG;
TRUNCATE TABLE USRASSISTENTEFISCAL.GBA_EXCEDENTE_ENT_INVENTARIO;
TRUNCATE TABLE USRASSISTENTEFISCAL.EXCEDENTE_MG_ENT_INVETARIO;
TRUNCATE TABLE USRASSISTENTEFISCAL.GBA_DT_CORTE;


-- Qual Aliquota de Entrada utilizar quando a saída for associada a + de uma ENTRADA?


select max(dt_fato_gerador_imposto) from USRASSISTENTEFISCAL.FIS_DETALHE_REC_EXCEDENTE_MG

BEGIN
 USRASSISTENTEFISCAL.SP_ExcedenteMG_VALID('535',TO_DATE('2016/12/01','YYYY/MM/DD'));
END;


BEGIN
 USRASSISTENTEFISCAL.SP_ExcedenteMG('535','01/11/2016','DD/MM/YYYY');
END;


SELECT MIN(DATA) FROM USRASSISTENTEFISCAL.GBA_RECUP_ST_saida_EXCEDENTE

SELECT * FROM USRASSISTENTEFISCAL.Excedente_MG_LOG

SELECT * FROM USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT
*/
------
 SELECT * FROM USRASSISTENTEFISCAL.Excedente_MG_MERC
2105226

select DISTINCT CONTA_CONTABIL from synchro.gba_calendario_pagamento
where observacao = 'ICMS ANTECIPACAO INTEGRAL'
ORDER BY OBSERVACAO

UPDATE synchro.gba_calendario_pagamento
SET CONTA_CONTABIL = '2105294'
where CONTA_CONTABIL IS NULL

SELECT * FROM synchro.gba_Centro_de_Custo_FB60

INNER JOIN (SELECT DISTINCT UF, IMPOSTO, OBSERVACAO, VENCIMENTO, CONTA_CONTABIL FROM SYNCHRO.GBA_CALENDARIO_PAGAMENTO)

select distinct uf, imposto, observacao, Conta_contabil from SYNCHRO.GBA_CALENDARIO_PAGAMENTO

select * from synchro.FIS_TOTAL_APURACAO where codigo = '013'

select * from SYNCHRO.GBA_FIS_IMPOSTO_FB
where observacao = 'ICMS SUBSTITUICAO TRIBUTARIA'
order by dt_fato_gerador_imposto desc
