
/*
create table USRASSISTENTEFISCAL.GBA_EXCEDENTE_ENT_INVENTARIO
(
  uf            VARCHAR2(2),
  filial        VARCHAR2(3), 
  est_codigo    VARCHAR2(14),
  dt_lancamento DATE,
  dt_transacao  DATE,
  merc_codigo   VARCHAR2(60),
  inventario    NUMBER(19,6),
  estoque       NUMBER(19,6),
  DT_PARTIDA    DATE,
  DT_PRIMEIRA_NOTA DATE,
  dt_criacao    DATE,
  USUARIO       VARCHAR2(60)
)
tablespace SYNDATA
nologging;
*/
/*
-- Simulacao
	DECLARE
	  V_DATA NUMBER;
	  CURSOR CUR Is
				 select
					 1 id, dof_sequence,dof_numero,dof_import_numero,EDOF_CODIGO,mdof_codigo,serie,filial,INFORMANTE_EST_CODIGO,cpf_cgc,cnpj_fornecedor,dt_fato_gerador_imposto,dh_emissao,cfop_codigo,operacao,DENTRO_ESTADO,stc_codigo,cod_barra,nbm_codigo,merc_codigo,descricao,idf_num,mov,vl_unit,embalagem,quantidade,volume,volume estoque,entsai_uni_codigo,estoque_uni_codigo,preco_total,vl_contabil,vl_ajuste_preco_total,vl_base_icms,aliq_icms,vl_icms,vl_base_st,vl_base_st vl_base_st_original,vl_st,aliq_stf,vl_ipi, (VL_BASE_ST / VOLUME) V_VL_BC_ST_UNIT,status,MES_ANO_ARQUIVO
					 ,SYSDATE
					 ,'1' ativo 
				 from table(USRASSISTENTEFISCAL.FN_EXCEDENTE_ENT('535',TO_DATE('2016/11/18','YYYY/MM/DD'),'R00001099414'));
				
	  LINHA CUR%ROWTYPE;
	BEGIN
		Open CUR;
		LOOP Fetch CUR INTO LINHA; 
		  EXIT WHEN CUR%NOTFOUND;
		  Begin
			  INSERT INTO USRASSISTENTEFISCAL.EXCEDENTE_MG_ENTRADA_DET VALUES(LINHA.id,LINHA.dof_sequence,LINHA.dof_numero,LINHA.dof_import_numero,LINHA.EDOF_CODIGO,LINHA.mdof_codigo,LINHA.serie,LINHA.filial,LINHA.INFORMANTE_EST_CODIGO,LINHA.cpf_cgc,LINHA.cnpj_fornecedor,LINHA.dt_fato_gerador_imposto,LINHA.dh_emissao,LINHA.cfop_codigo,LINHA.operacao,LINHA.DENTRO_ESTADO,LINHA.stc_codigo,LINHA.cod_barra,LINHA.nbm_codigo,LINHA.merc_codigo,LINHA.descricao,LINHA.idf_num,LINHA.mov,LINHA.vl_unit,LINHA.embalagem,LINHA.quantidade,LINHA.volume,LINHA.estoque,LINHA.entsai_uni_codigo,LINHA.estoque_uni_codigo,LINHA.preco_total,LINHA.vl_contabil,LINHA.vl_ajuste_preco_total,LINHA.vl_base_icms,LINHA.aliq_icms,LINHA.vl_icms,LINHA.vl_base_st,LINHA.vl_base_st_original,LINHA.vl_st,LINHA.aliq_stf,LINHA.vl_ipi,LINHA.V_VL_BC_ST_UNIT,LINHA.status,LINHA.MES_ANO_ARQUIVO,LINHA.SYSDATE,LINHA.ativo);
		  
			  COMMIT;
			  
			EXCEPTION
			  WHEN NO_DATA_FOUND THEN NULL;
		  END;
		END LOOP;
		Close CUR;
	END;

*/

--call USRASSISTENTEFISCAL.FN_EXCEDENTE_INVENTARIO('535','',to_date('2017/01/12','yyyy/mm/dd'));



CREATE OR REPLACE PROCEDURE USRASSISTENTEFISCAL.FN_EXCEDENTE_INVENTARIO(P_FILIAL IN VARCHAR2, P_MERCADORIA IN VARCHAR2, P_PERIODO_VENDA IN DATE, P_DATA_CORTE OUT DATE, P_VL_INVENTARIO OUT NUMBER)
AS
	V_VL_INVENTARIO	  NUMBER(19,2) := 0;
	V_VL_SALDO_SAIDA  NUMBER(19,2) := 0;
	V_BUSCA_ENTRADA   INT          := 0;
	V_VL_ESTOQUE      NUMBER(19,2) := 0;
	V_ID_ENTRADA      INT          := 0;
	V_DATA_CORTE	  DATE		   := NULL;
	
    CURSOR CUR_INVENTARIO IS
							SELECT
							   F.UF,
							   F.FILIAL,
							   F.EST_CODIGO,
							   I.dt_lancamento,
							   I.dt_transacao,
							   I.quantidade QTD_INVENTARIO,
							   I.merc_codigo
							FROM synchro.fis_lancamento_inventario I
							LEFT JOIN USRASSISTENTEFISCAL.GBA_EXCEDENTE_ENT_INVENTARIO G ON I.EST_CODIGO = G.EST_CODIGO AND I.DT_LANCAMENTO = G.DT_LANCAMENTO AND I.MERC_CODIGO = G.MERC_CODIGO
							INNER JOIN SYNCHRO.TBFILIAL F ON (I.EST_CODIGO = F.FILIAL OR I.EST_CODIGO = F.EST_CODIGO)
								WHERE
									F.FILIAL            = P_FILIAL
									AND I.dt_lancamento = to_date(extract(year from P_PERIODO_VENDA)||'/'||extract(month from P_PERIODO_VENDA)||'/01','yyyy/mm/dd')
									AND I.MERC_CODIGO   = CASE WHEN NVL(P_MERCADORIA,'') = '' OR P_MERCADORIA IS NULL THEN I.MERC_CODIGO ELSE P_MERCADORIA END
									AND G.EST_CODIGO    IS NULL;
        
    INVENTARIO  CUR_INVENTARIO%ROWTYPE;
BEGIN
    
  OPEN CUR_INVENTARIO;
  LOOP
    FETCH CUR_INVENTARIO INTO INVENTARIO;
    EXIT WHEN CUR_INVENTARIO%NOTFOUND;
    BEGIN
		V_VL_INVENTARIO  := INVENTARIO.QTD_INVENTARIO;
		V_VL_SALDO_SAIDA := INVENTARIO.QTD_INVENTARIO;
		V_DATA_CORTE 	 := INVENTARIO.dt_transacao;
				
		IF NVL(V_VL_SALDO_SAIDA,-1) < 0
		THEN
			BEGIN
				INSERT INTO USRASSISTENTEFISCAL.GBA_EXCEDENTE_ENT_INVENTARIO (UF, FILIAL,EST_CODIGO,DT_LANCAMENTO,DT_TRANSACAO,MERC_CODIGO,QTD_INVENTARIO,ESTOQUE,DT_PARTIDA,DT_PRIMEIRA_NOTA,DT_CRIACAO) VALUES(INVENTARIO.UF,INVENTARIO.FILIAL,INVENTARIO.EST_CODIGO,INVENTARIO.DT_LANCAMENTO,INVENTARIO.DT_TRANSACAO,INVENTARIO.MERC_CODIGO,INVENTARIO.QTD_INVENTARIO,0,V_DATA_CORTE,V_DATA_CORTE,SYSDATE);
			END;
		ELSE
			BEGIN
				V_BUSCA_ENTRADA := 1;

				-- WHILE BUSCA A ÚLTIMA ENTRADA
				WHILE V_VL_SALDO_SAIDA > 0 AND V_BUSCA_ENTRADA = 1
				LOOP
				BEGIN
					V_BUSCA_ENTRADA := 0;
				  
					FOR NF_ENTRADA IN (select * from table(USRASSISTENTEFISCAL.FN_EXCEDENTE_ULT_ENT_IVT(INVENTARIO.FILIAL, INVENTARIO.dt_transacao,INVENTARIO.MERC_CODIGO)) )
					LOOP
					BEGIN
						V_DATA_CORTE 	 := NF_ENTRADA.DT_FATO_GERADOR_IMPOSTO;
						V_BUSCA_ENTRADA  := 1;
						
						IF NF_ENTRADA.ESTOQUE >= V_VL_SALDO_SAIDA
						THEN
						  BEGIN
							  V_VL_ESTOQUE     			:= NF_ENTRADA.ESTOQUE - V_VL_SALDO_SAIDA;
							  V_VL_SALDO_SAIDA 			:=  0;
						  END;
						ELSE
						  BEGIN
							  V_VL_ESTOQUE     			:= 0;
							  V_VL_SALDO_SAIDA 			:= V_VL_SALDO_SAIDA - NF_ENTRADA.ESTOQUE;
						  END;
						END IF;
						
						IF NF_ENTRADA.ATUALIZAR_ESTOQUE = 1
						THEN
							BEGIN
								UPDATE USRASSISTENTEFISCAL.EXCEDENTE_MG_ENT_INVETARIO
									SET ESTOQUE = V_VL_ESTOQUE
								WHERE
									ID = NF_ENTRADA.ID;
							END;
						ELSE
							BEGIN
								select USRASSISTENTEFISCAL.SEQ_EXCEDENTE_MG_ULT_ENTRADA.NEXTVAL INTO V_ID_ENTRADA from dual;
								
								IF NF_ENTRADA.ID = '-1'
								THEN
									BEGIN
										UPDATE USRASSISTENTEFISCAL.EXCEDENTE_MG_ENT_INVETARIO
											SET ATIVO = '0'
										WHERE ATIVO 			   = '1' 
											 AND DOF_IMPORT_NUMERO = NF_ENTRADA.DOF_IMPORT_NUMERO
											 AND MERC_CODIGO	   = NF_ENTRADA.MERC_CODIGO;
									END;
								END IF;
								
								INSERT INTO USRASSISTENTEFISCAL.EXCEDENTE_MG_ENT_INVETARIO VALUES(V_ID_ENTRADA,NF_ENTRADA.dof_sequence,NF_ENTRADA.dof_numero,NF_ENTRADA.dof_import_numero,NF_ENTRADA.EDOF_CODIGO,NF_ENTRADA.mdof_codigo,NF_ENTRADA.serie,NF_ENTRADA.filial,NF_ENTRADA.INFORMANTE_EST_CODIGO,NF_ENTRADA.cpf_cgc,NF_ENTRADA.cnpj_fornecedor,NF_ENTRADA.dt_fato_gerador_imposto,NF_ENTRADA.dh_emissao,NF_ENTRADA.cfop_codigo,NF_ENTRADA.operacao,NF_ENTRADA.DENTRO_ESTADO,NF_ENTRADA.stc_codigo,NF_ENTRADA.cod_barra,NF_ENTRADA.nbm_codigo,NF_ENTRADA.merc_codigo,NF_ENTRADA.descricao,NF_ENTRADA.idf_num,NF_ENTRADA.mov,NF_ENTRADA.vl_unit,NF_ENTRADA.embalagem,NF_ENTRADA.quantidade,NF_ENTRADA.volume,V_VL_ESTOQUE,NF_ENTRADA.entsai_uni_codigo,NF_ENTRADA.estoque_uni_codigo,NF_ENTRADA.preco_total,NF_ENTRADA.vl_contabil,NF_ENTRADA.vl_ajuste_preco_total,NF_ENTRADA.vl_base_icms,NF_ENTRADA.aliq_icms,NF_ENTRADA.vl_icms,NF_ENTRADA.vl_base_st,NF_ENTRADA.vl_base_st,NF_ENTRADA.vl_st,NF_ENTRADA.aliq_stf,NF_ENTRADA.vl_ipi,0,NF_ENTRADA.status,NF_ENTRADA.MES_ANO_ARQUIVO,SYSDATE,'1');
							END;
						END IF;
						
						EXIT WHEN NVL(V_VL_SALDO_SAIDA,0) = 0;
					END;
					END LOOP; -- FIM BUSCA ÚLTIMA ENTRADA PARA LOJA
				END;
				END LOOP; -- FIM WHILE BUSCA A ÚLTIMA ENTRADA
				
				DELETE FROM USRASSISTENTEFISCAL.EXCEDENTE_MG_ENT_INVETARIO WHERE FILIAL = INVENTARIO.FILIAL AND MERC_CODIGO = INVENTARIO.MERC_CODIGO;
				
				INSERT INTO USRASSISTENTEFISCAL.GBA_EXCEDENTE_ENT_INVENTARIO (UF, FILIAL,EST_CODIGO,DT_LANCAMENTO,DT_TRANSACAO,MERC_CODIGO,QTD_INVENTARIO,ESTOQUE,DT_PARTIDA,DT_PRIMEIRA_NOTA,DT_CRIACAO) VALUES(INVENTARIO.UF,INVENTARIO.FILIAL,INVENTARIO.EST_CODIGO,INVENTARIO.DT_LANCAMENTO,INVENTARIO.DT_TRANSACAO,INVENTARIO.MERC_CODIGO,INVENTARIO.QTD_INVENTARIO,V_VL_SALDO_SAIDA,V_DATA_CORTE,V_DATA_CORTE,SYSDATE);
				
			END;
		END IF;
			
    COMMIT;
  END;
  END LOOP;
  CLOSE CUR_INVENTARIO;
  
  IF ( (V_DATA_CORTE IS NULL OR NVL(V_DATA_CORTE,NULL) = NULL) AND (NVL(P_MERCADORIA,'') <> '' AND P_MERCADORIA IS NOT NULL) )
  THEN
	BEGIN
      SELECT
        G.DT_PARTIDA, G.QTD_INVENTARIO INTO  V_DATA_CORTE, V_VL_INVENTARIO
      FROM USRASSISTENTEFISCAL.GBA_EXCEDENTE_ENT_INVENTARIO G
	  WHERE 
		G.FILIAL 			= P_FILIAL
		AND G.dt_lancamento = to_date(extract(year from P_PERIODO_VENDA)||'/'||extract(month from P_PERIODO_VENDA)||'/01','yyyy/mm/dd')
		AND G.MERC_CODIGO   = P_MERCADORIA;

      EXCEPTION WHEN NO_DATA_FOUND 
		THEN 
			BEGIN 
				V_DATA_CORTE 	:= to_date(extract(year from P_PERIODO_VENDA)||'/'||extract(month from P_PERIODO_VENDA)||'/01','yyyy/mm/dd'); 
				V_VL_INVENTARIO	:= 	0;		
			END;
    END;
  END IF;
  
  P_DATA_CORTE 		:= V_DATA_CORTE;
  P_VL_INVENTARIO 	:= V_VL_INVENTARIO;
END;