
CREATE TABLE USRASSISTENTEFISCAL.FIS_DETALHE_REC_EXCEDENTE_MG(
ID 							NUMBER,
REC_ID 						NUMBER,
DET_ID 						NUMBER,
FAZ_PARTE_PEDIDO 			VARCHAR2(1),
MOV							VARCHAR2(1),
FILIAL						VARCHAR2(4),
DOF_NUMERO 					VARCHAR2(9),
DOF_IMPORT_NUMERO			VARCHAR2(23),
DT_FATO_GERADOR_IMPOSTO		DATE,
CFOP_CODIGO					VARCHAR2(5),
	TIPO_CFOP				VARCHAR2(1),
	DENTRO_ESTADO			VARCHAR2(1),
	ENT_SAI_UNI_CODIGO		VARCHAR2(5),
MERC_CODIGO					VARCHAR2(12),
DESCRICAO					VARCHAR2(255),
NUM_ITEM					NUMBER(3),

EMBALAGEM					NUMBER(19,2),
VL_CONTABIL					NUMBER(19,2),
QUANTIDADE					NUMBER(19,2),	--SAIDA (QTD) 	    ENTRADA (QUANTIDADE)
VOLUME						NUMBER(19,2),	--SAIDA (VOLUME)	    ENTRADA (VOLUME)
SALDO						NUMBER(19,2),
VL_UNIT						NUMBER(19,2),	--SAIDA (VL_UNITARIO) ENTRADA (VL_UNIT)

ALIQ_ST_ENTRADA				NUMBER(15,4),
VL_BASE_ST_ORIGINAL			NUMBER(15,4),

VL_BASE_ST_UNIT				NUMBER(19,2),
VL_BASE_ST					NUMBER(19,2),
VL_CREDITO					NUMBER(19,2),

VL_BC_ST_UNIT_MEDIO			NUMBER(19,2),
VL_BASE_ACUMULADA			NUMBER(19,2),
QTD_ACUMULADA				NUMBER(19,2),

STATUS						VARCHAR2(11)
DT_REGISTRO					DATE
)TABLESPACE SYNDATA NOLOGGING;


CREATE OR REPLACE PROCEDURE USRASSISTENTEFISCAL.SP_ExcedenteMG_VALID(P_FILIAL VARCHAR2, P_DT_INICIO DATE)
AS
  V_DATA NUMBER;

  V_ID INT := 0;

  CURSOR CUR Is
				SELECT * 
				FROM USRASSISTENTEFISCAL.Excedente_MG_MERC
				WHERE
					FILIAL    = P_FILIAL
				AND DT_INICIO = P_DT_INICIO;

  LINHA CUR%ROWTYPE;
BEGIN

    SELECT
    MAX(ID) INTO V_ID
    FROM USRASSISTENTEFISCAL.FIS_DETALHE_REC_EXCEDENTE_MG;

    Open CUR;
    LOOP Fetch CUR INTO LINHA;
    EXIT WHEN CUR%NOTFOUND;
      Begin
	  
		FOR NF_ENTRADA IN ( 
							SELECT
								DISTINCT
								A.REC_ID,A.ID_ENTRADA,B.MOV,A.FILIAL,
								B.DOF_NUMERO, B.DOF_IMPORT_NUMERO, B.DT_FATO_GERADOR_IMPOSTO,B.CFOP_CODIGO,
								''TIPO_CFOP, B.DENTRO_ESTADO, B.ENTSAI_UNI_CODIGO UNIDADE, B.MERC_CODIGO, B.DESCRICAO, B.IDF_NUM, B.EMBALAGEM, B.VL_CONTABIL, B.QUANTIDADE,B.VOLUME,B.ESTOQUE SALDO, B.VL_UNIT,
								B.VL_BASE_ST, B.VL_BASE_ST_ORIGINAL,
								B.VL_BC_ST_UNIT,
								A.VL_BC_ST_UNIT_MEDIO,
								A.VL_BASE_ACUMULADA, A.QTD_ACUMULADA,B.STATUS,
								B.IDF_NUM NUM_ITEM, B.ALIQ_STF
							FROM USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT A
							INNER JOIN USRASSISTENTEFISCAL.EXCEDENTE_MG_ENTRADA_DET B ON A.ID_ENTRADA = B.ID AND B.FILIAL NOT IN('607','688','504','529')
							WHERE
								A.REC_ID = LINHA.REC_ID
							ORDER BY A.ID_ENTRADA
		)
		LOOP
		BEGIN
		  V_ID := NVL(V_ID,0) + 1;

		  INSERT INTO USRASSISTENTEFISCAL.FIS_DETALHE_REC_EXCEDENTE_MG(ID,REC_ID,PERIODO,MOV,FILIAL,DOF_NUMERO,DOF_IMPORT_NUMERO,DT_FATO_GERADOR_IMPOSTO,CFOP_CODIGO,ENT_SAI_UNI_CODIGO,MERC_CODIGO,DESCRICAO,NUM_ITEM,EMBALAGEM,VL_CONTABIL,QUANTIDADE,VOLUME,SALDO,VL_UNIT,ALIQ_ST_ENTRADA,VL_BASE_ST_ORIGINAL,VL_BASE_ST_UNIT,VL_BASE_ST,VL_BC_ST_UNIT_MEDIO,VL_BASE_ACUMULADA,QTD_ACUMULADA,STATUS,DT_REGISTRO)
		  VALUES(V_ID,NF_ENTRADA.REC_ID,TO_CHAR(LINHA.DT_INICIO,'MMYYYY'),'E',NF_ENTRADA.FILIAL,NF_ENTRADA.DOF_NUMERO,NF_ENTRADA.DOF_IMPORT_NUMERO,NF_ENTRADA.DT_FATO_GERADOR_IMPOSTO,NF_ENTRADA.CFOP_CODIGO,NF_ENTRADA.UNIDADE,NF_ENTRADA.MERC_CODIGO,NF_ENTRADA.DESCRICAO,NF_ENTRADA.NUM_ITEM,NF_ENTRADA.EMBALAGEM,NF_ENTRADA.VL_CONTABIL,NF_ENTRADA.QUANTIDADE,NF_ENTRADA.VOLUME,NF_ENTRADA.SALDO,NF_ENTRADA.VL_UNIT,NF_ENTRADA.ALIQ_STF,NF_ENTRADA.VL_BASE_ST_ORIGINAL,NF_ENTRADA.VL_BC_ST_UNIT,NF_ENTRADA.VL_BASE_ST,NF_ENTRADA.VL_BC_ST_UNIT_MEDIO,NF_ENTRADA.VL_BASE_ACUMULADA,NF_ENTRADA.QTD_ACUMULADA,NF_ENTRADA.STATUS,SYSDATE);

		END;
		END LOOP;

		FOR NF_SAIDA IN ( 
						SELECT
							DISTINCT
							A.FAZ_PARTE_PEDIDO,
							A.VL_BC_ST_UNIT_MEDIO,
							A.SALDO_SAIDA SALDO,
							S.*
						FROM USRASSISTENTEFISCAL.EXCEDENTE_MG_SAIDA_DET S
						INNER JOIN USRASSISTENTEFISCAL.Excedente_MG_SAIDAXENT A ON  A.REC_ID = S.REC_ID AND A.DET_ID = S.DET_ID AND A.FILIAL NOT IN('607','688','504','529')
						WHERE 
							S.REC_ID = LINHA.REC_ID
						ORDER BY S.DET_ID
		)
		LOOP
		BEGIN
		  V_ID := NVL(V_ID,0) + 1;

		  INSERT INTO USRASSISTENTEFISCAL.FIS_DETALHE_REC_EXCEDENTE_MG(ID,REC_ID,DET_ID,FAZ_PARTE_PEDIDO,PERIODO,MOV,FILIAL,DOF_NUMERO,DOF_IMPORT_NUMERO,DT_FATO_GERADOR_IMPOSTO,CFOP_CODIGO,MERC_CODIGO,DESCRICAO,NUM_ITEM,VL_CONTABIL,QUANTIDADE,VOLUME,SALDO,VL_UNIT,ALIQ_ST_ENTRADA,VL_BASE_ST,VL_CREDITO,VL_BC_ST_UNIT_MEDIO,STATUS,DT_REGISTRO)
		  VALUES(V_ID,NF_SAIDA.REC_ID,NF_SAIDA.DET_ID,NF_SAIDA.FAZ_PARTE_PEDIDO,TO_CHAR(LINHA.DT_INICIO,'MMYYYY'),'S',NF_SAIDA.FILIAL,NF_SAIDA.DOF_NUMERO,NF_SAIDA.DOF_IMPORT_NUMERO,NF_SAIDA.DATA,NF_SAIDA.CFOP_CODIGO,NF_SAIDA.MERC_CODIGO,NF_SAIDA.DESCRICAO,NF_SAIDA.NUM_ITEM,NF_SAIDA.VL_CONTABIL,NF_SAIDA.QTD,NF_SAIDA.VOLUME,NF_SAIDA.SALDO,NF_SAIDA.VL_UNITARIO,NF_SAIDA.ALIQ_STF_ENTRADA,NF_SAIDA.VL_BASE_ST_VENDA,NF_SAIDA.VL_CREDITO,NF_SAIDA.VL_BASE_ST_UNIT,NF_SAIDA.STATUS,SYSDATE);

		END;
		END LOOP;

		COMMIT;
    END;
    END LOOP;
    Close CUR;
END;
